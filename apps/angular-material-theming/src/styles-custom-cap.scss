@use '@angular/material' as mat;
@import '@angular/material/theming';

// custom background and foreground palettes
$my-cap-theme-background: (
  status-bar: #0070ad,
  app-bar: map_get(mat.$blue-palette, 900),
  background: #12abdb,
  hover: rgba(white, 0.04),
  card: map_get(mat.$red-palette, 800),
  dialog: map_get(mat.$grey-palette, 800),
  disabled-button: $white-12-opacity,
  raised-button: map-get(mat.$grey-palette, 800),
  focused-button: $white-6-opacity,
  selected-button: map_get(mat.$grey-palette, 900),
  selected-disabled-button: map_get(mat.$grey-palette, 800),
  disabled-button-toggle: black,
  unselected-chip: map_get(mat.$grey-palette, 700),
  disabled-list-option: black,
);

$my-cap-theme-foreground: (
  base: yellow,
  divider: $white-12-opacity,
  dividers: $white-12-opacity,
  disabled: rgba(white, 0.3),
  disabled-button: rgba(white, 0.3),
  disabled-text: rgba(white, 0.3),
  hint-text: rgba(white, 0.3),
  secondary-text: rgba(white, 0.7),
  icon: white,
  icons: white,
  text: white,
  slider-min: white,
  slider-off: rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3),
);

// instead of creating a theme with mat-light-theme or mat-dark-theme,
// we will create our own theme-creating function that lets us apply our own foreground and background palettes.
@function create-my-cap-theme($primary, $accent, $warn: mat.define-palette(mat.$red-palette)) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: false,
    foreground: $my-cap-theme-foreground,
    background: $my-cap-theme-background
  );
}

// We use create-my-new-theme instead of mat-light-theme or mat-dark-theme
$custom-cap-theme-primary: mat.define-palette(mat.$green-palette);
$custom-cap-theme-accent: mat.define-palette(mat.$blue-palette);
$custom-cap-theme-warn: mat.define-palette(mat.$red-palette);

$custom-cap-theme: create-my-cap-theme(
  $custom-cap-theme-primary,
  $custom-cap-theme-accent,
  $custom-cap-theme-warn
);
